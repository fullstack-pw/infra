name: Ansible Provisioning

on:
  push:
    branches:
      - main
    paths:
      - "proxmox/k8s.ini"

jobs:
  detect-ansible-command:
    if: >
      (github.event_name == 'pull_request' && github.event.pull_request.merged == true) || 
      (github.event_name == 'push' && contains(github.event.head_commit.message, '[ansible'))
    runs-on: self-hosted
    outputs:
      playbook: ${{ steps.get-playbook.outputs.playbook }}
      should_run: ${{ steps.get-playbook.outputs.should_run }}
    steps:
      - name: Extract Ansible Playbook from Commit Message
        id: get-playbook
        run: |
          # Handle different event types
          if [[ "${{ github.event_name }}" == "pull_request" ]]; then
            PR_TITLE="${{ github.event.pull_request.title }}"
            COMMIT_MSG="${{ github.event.pull_request.head.label }} ${{ github.event.pull_request.body }}"
            COMBINED="$PR_TITLE $COMMIT_MSG"
          else
            COMBINED="${{ github.event.head_commit.message }}"
          fi

          # Look for [ansible playbook-name] pattern
          if [[ $COMBINED =~ \[ansible[[:space:]]+([^\]]+)\] ]]; then
            PLAYBOOK="${BASH_REMATCH[1]}"
            # Trim whitespace
            PLAYBOOK=$(echo $PLAYBOOK | xargs)
            echo "Found playbook: $PLAYBOOK"
            echo "playbook=$PLAYBOOK" >> $GITHUB_OUTPUT
            echo "should_run=true" >> $GITHUB_OUTPUT
          else
            echo "No ansible command found in commit message"
            echo "should_run=false" >> $GITHUB_OUTPUT
          fi
  run-ansible:
    needs: detect-ansible-command
    if: needs.detect-ansible-command.outputs.should_run == 'true'
    runs-on: self-hosted
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Install Ansible
        run: |
          python -m pip install --upgrade pip
          pip install ansible

      - name: Determine Playbook Path
        id: playbook-path
        run: |
          PLAYBOOK="${{ needs.detect-ansible-command.outputs.playbook }}"

          # Check playbooks directory first
          if [ -f "playbooks/${PLAYBOOK}.yml" ]; then
            echo "Found playbook file: playbooks/${PLAYBOOK}.yml"
            echo "PLAYBOOK_PATH=playbooks/${PLAYBOOK}.yml" >> $GITHUB_ENV
          # Check proxmox directory next
          elif [ -f "proxmox/${PLAYBOOK}.yml" ]; then
            echo "Found playbook file: proxmox/${PLAYBOOK}.yml"
            echo "PLAYBOOK_PATH=proxmox/${PLAYBOOK}.yml" >> $GITHUB_ENV
          # Finally check root directory
          elif [ -f "${PLAYBOOK}.yml" ]; then
            echo "Found playbook file: ${PLAYBOOK}.yml"
            echo "PLAYBOOK_PATH=${PLAYBOOK}.yml" >> $GITHUB_ENV
          else
            echo "Playbook file not found for: ${PLAYBOOK}"
            echo "Searched in playbooks/, proxmox/, and root directories"
            exit 1
          fi

      - name: Prepare Environment
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H 192.168.1.* >> ~/.ssh/known_hosts
        if: env.PLAYBOOK_PATH != ''

      - name: Run Ansible Playbook
        run: |
          echo "Running playbook: $PLAYBOOK_PATH"

          # Check if we have new hosts to limit execution to
          if [ -f "proxmox/new_hosts.txt" ] && [ -s "proxmox/new_hosts.txt" ]; then
            echo "Found new hosts, running playbook only on them:"
            cat proxmox/new_hosts.txt
            
            # Run the playbook for each new host in its group
            while IFS=, read -r IP ENV; do
              if [ -n "$IP" ] && [ -n "$ENV" ]; then
                echo "Running playbook for new host $IP in group $ENV"
                ANSIBLE_HOST_KEY_CHECKING=False ansible-playbook -i proxmox/k8s.ini $PLAYBOOK_PATH --limit $IP
              fi
            done < proxmox/new_hosts.txt
          else
            echo "No new hosts found, running playbook on all matching hosts"
            ANSIBLE_HOST_KEY_CHECKING=False ansible-playbook -i proxmox/k8s.ini $PLAYBOOK_PATH
          fi
        if: env.PLAYBOOK_PATH != ''

      - name: Notify Completion
        run: |
          echo "✅ Ansible playbook execution completed: ${{ needs.detect-ansible-command.outputs.playbook }}"
        if: success() && env.PLAYBOOK_PATH != ''

      - name: Notify Failure
        if: failure() && env.PLAYBOOK_PATH != ''
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `## Ansible Provisioning Failed
              
              ❌ Failed to run ansible playbook: \`${{ needs.detect-ansible-command.outputs.playbook }}\`
              
              Please check the workflow logs for more details.
              `
            })
