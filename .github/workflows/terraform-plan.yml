name: Terraform
on:
  pull_request:
    branches:
      - main
    paths:
      - "proxmox/**"
      - "clusters/**"
      - "secrets/**"
      - ".github/workflows/terraform-*.yml"

permissions:
  contents: read
  pull-requests: write

jobs:
  detect-changes:
    runs-on: self-hosted
    outputs:
      proxmox: ${{ steps.filter.outputs.proxmox }}
      clusters: ${{ steps.filter.outputs.clusters }}
    steps:
      - uses: actions/checkout@v4
      - uses: dorny/paths-filter@v3
        id: filter
        with:
          filters: |
            proxmox:
              - 'proxmox/**'
            clusters:
              - 'clusters/**'
              - 'secrets/**'

  plan-proxmox:
    needs: detect-changes
    if: needs.detect-changes.outputs.proxmox == 'true'
    runs-on: self-hosted
    environment: terraform

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.10.5

      - name: Terraform Init
        working-directory: ./proxmox
        run: |
          terraform init

      - name: Terraform Plan
        working-directory: ./proxmox
        id: plan
        run: |
          terraform plan -no-color -out=tfplan
          terraform show -no-color tfplan > plan.txt
        continue-on-error: true

      - name: Upload Plan Artifact
        uses: actions/upload-artifact@v4
        with:
          name: proxmox-plan
          path: proxmox/plan.txt

      - name: Add Plan Comment
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const fs = require('fs');
            const planOutput = fs.readFileSync('./proxmox/plan.txt', 'utf8');
            const truncatedOutput = planOutput.length > 65000 
              ? planOutput.substring(0, 65000) + "\n\n... Output truncated due to size. See artifacts for full plan."
              : planOutput;

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `## Proxmox Terraform Plan
              \`\`\`terraform
              ${truncatedOutput}
              \`\`\`
              
              Plan exit code: ${{ steps.plan.outcome == 'success' && '0' || '1' }}
              `
            })

  plan-clusters:
    needs: detect-changes
    if: needs.detect-changes.outputs.clusters == 'true'
    runs-on: self-hosted
    environment: terraform
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.10.5

      - name: Terraform Init
        run: |
          make init

      - name: Terraform Plan
        id: plan
        run: |
          make plan
        continue-on-error: true

      - name: Upload Plan Artifact
        uses: actions/upload-artifact@v4
        with:
          name: clusters-plan
          path: clusters/plan.txt

      - name: Add Plan Comment
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const fs = require('fs');
            const planOutput = fs.readFileSync('./clusters/plan.txt', 'utf8');
            const truncatedOutput = planOutput.length > 65000 
              ? planOutput.substring(0, 65000) + "\n\n... Output truncated due to size. See artifacts for full plan."
              : planOutput;

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `## Clusters Terraform Plan
              \`\`\`terraform
              ${truncatedOutput}
              \`\`\`
              
              Plan exit code: ${{ steps.plan.outcome == 'success' && '0' || '1' }}
              `
            })
